#33 문자열 연산자 (+, *)
- +는 문자열 붙임, 띄어쓰기도 가능
- 문자열 * 숫자 : 숫자만큼 반복되어 연결 
- def cls():
	    print('\n'*5)
  cls()
   
  입력창 정리하기
  

#34 비교 연산자 (==, !=, 부등호)
- == 양쪽이 같냐
- != 양쪽이 다르냐
- 부등호

모두 결과는 True 혹은 False


#35 논리 연산자 (and, or, not)
- and 모두 참이여야 참
- or 하나라도 참이면 참
- not 참은 거짓으로, 거짓은 참으로


#36 멤버쉽 연산자 (in, not in)
- 결과는 True 혹은 False


#37 if 조건 :
        실행할 명령1
        실행할 명령2

띄어쓰기 4칸 추천
조건을 만족하지 않으면 코드블럭(명령) 탈출


#38 else, elif
if 조건 :
    실행할 명령1
    실행할 명령2
else :
    실행할 명령1
    실행할 명령2
    
if에서 else로 넘어온 건 무조건 실행 

if 조건 :
    실행할 명령1
    실행할 명령2
elif 조건:
    실행할 명령1
    실행할 명령2
    
elif에서도 False면 걍 탈출
elif 여러개 가능
elif 밑에 else : 추가 가능
    
    
#39 While (조건에 따라 반복)
While 조건:
    실행할 명령
무한루프 주의, ctrl+c로 강제중지


#40 continue, break
while count < 10:
    count+=1
    if count < 4:
        continue
    print('횟수:', count)
    if count==8:
        break

- continue는 조건 만족하면 그 다음줄로 넘어가지 않고 다시 while조건으로 돌아감
  따라서 count가 4일 때부터 출력
- 8이면 while조건 상관없이 끝냄
- 4, 5, 6, 7, 8 만 출력


#41 딕셔너리{key1: val1, ...}
- key를 이용하여 val호출
- dict[키]=값 으로 삽입
- 키와 값은 숫자든 문자든 노상관
- dict 호출하면 {키: 값, ...}
- del dict[키] 로 삭제


#42 딕셔너리 메서드(딕셔너리의 함수)
- dict.values() 값만 가져옴
- dict.keys() 키만 가져옴
- dict.items() 둘 다 가져옴
