https://m.blog.naver.com/weplayicecream/221451767936

부동산 실거래매매 데이터 제공 & 파이썬 스크랩 소스코드 공개
: 부동산실거래매매가 아파트,오피스텔 매매/전월세 공공데이터 포털, 우리한걸음씩 함께가요


<데이터출처>

#공공데이터포털 에 접속하면 #국가중점데이터 를 가져올 수 있습니다.
www.data.go.kr

페이지에 접속해서 #부동산거래관리정보 을 클릭하면 #부동산실거래신고데이터 를 가져올 수 있습니다. 
이번에는 #아파트 #전세 #매매 #오피스텔 #전세 #매매 데이터에 대해서 다룰 예정입니다.
위 데이터는 내집 마련시에 어느 단지의 시세가 얼마인지, 어느 정도에 거래되고 있는지, 투자 가치가 있는지 등을 보다 신뢰성 있게 파악이 가능합니다. 

활용 가이드 참고!!
"국토교통부 실거래가 오픈API 활용가이드.hwp"

국토 교통부 실거래가 정보는 부동산 거래신고에 관한 법률에 따라 신고된 주택의 실거래 자료를 제공합니다.

 위 데이터 소스를 보면 아파트 분양권전매, 실거래자료, 단독/다가구, 오피스텔 매매 등등의 데이터를 제공하고 있습니다. 
 !!!!!!!각 데이터는 요청을 하루에 1000번으로 제한을하고 있기 때문에 전체 데이터 셋을 모으는데는 약 일주일정도의 시간이 걸렸던것 같네요. 
 연구의 목적으로 데이터 수집이 필요하신분은 댓글 달아주시면 제공해드릴께요.
 
API를 요청하기 위해서는 <Service_Key>가 필요한데요. 
공공데이터 포털에 회원 가입을하고, 활용동의 신청을 하면 발급을 받을 수 있습니다. 
발급을 받은 이후에는 호출할때 파라미터로 함께 넘겨주시면 데이터를 받아오실 수 있습니다. 

아래와 같이 End Point의 주소를 입력하고 호출을 하면 그에 해당하는 데이터 조회가 가능합니다. 
http://openapi.molit.go.kr/OpenAPI_ToolInstallPackage/service/rest/RTMSOBJSvc

보통 아파트, 오피스텔 매매/전월세의 경우에는 동코드를 파라미터로 넘겨서 데이터를 받아옵니다. 
여기서 #행정동코드 #법정동코드 에 대한 이해가 필요한데요. 
자세한 동코드에 대한 내용은 #행정표준코드 를 참고하시면 됩니다.
(행정표준코드 관리시스템
(www.code.go.kr)의 도로명 참조)


<데이터를 어떻게 가져올까?>
첫번째 API 호출하기, 두번째 데이터 파싱하기, 그리고 마지막으로 데이터 저장하기 입니다.
위 3단계에 대해서 설명하고 추가적으로 1000번의 호출 제한이 있는데, 어떻게 해결했는지에 대해서 설명할께요.


1. API 호출하기
#postman 을 이용해서 API 호출하고, 호출한 내용을 코드로 변환해서 사용합니다. 
호출한 내용을 모든 프록래밍 언어로 변환이 가능하니 사용해보시는것도 추천드려요.
def get_data(url, rcode, date):
    import requests
    querystring = {"pageNo":"1","startPage":"1","numOfRows":"99999","pageSize":"10","LAWD_CD":""+rcode+ "","DEAL_YMD":""+date+"","type":"json", "serviceKey":""}
    
    headers = {
        'cache-control': "no-cache",
        'postman-token': "e8d4c5d9-9287-549d-b5bc-9cdd60e76e1d"
        }
    response = requests.request("GET", url, headers=headers, params=querystring)
    return response
    
Postman 이란? (https://www.getpostman.com/)
API 개발을 빠르고 쉽게, 개발된 API를 테스트할 수 있고, 팀원들간 공유를 할 수 있게 해주는 플랫폼입니다.
공식 홈페이지에서 다운받아 설치


2. 데이터 파싱하기
부동산 데이터는 요청하게 되면 #XML 의 #데이터포맷 으로 응답이 오기 때문에 #XMLParser 를 사용하는 방법에 대해서 아셔야 합니다.
아래와 같이 XML의 Tree를 파싱해서 필요한 데이터를 추출하는 작업을 진행했습니다.
import xml.etree.ElementTree as ET

def get_items(response):
    root = ET.fromstring(response.content)
    item_list = []
    for child in root.find('body').find('items'):
        elements = child.findall('*')
        data = {}
        for element in elements:
            tag = element.tag.strip()
            text = element.text.strip()
            # print tag, text
            data[tag] = text
        item_list.append(data)  
    return item_list
 
 3.  데이터 저장하기
  파이썬에서 데이터의 I/O는 #Pandas 를 사용하는게 좋습니다. 
  아래와 같이 데이터를 최종적으로 저장하면 데이터 수집은 끝입니다.
 
import pandas as pd
items.to_csv(os.path.join(dir_path, filename), index=False, encoding='utf8') 

추가로...

 추가로 데이터 수집을 하루에 1,000개만 가능하기 때문에 하루에 한번씩 호출을 해줘야 하는데요. #schedule 의 파이썬 패키지를 사용해서 다음과 같이 진행했습니다. 하루에 한번씩 19:00시에 스크랩을 진행하게 됩니다. 
 이렇게 수집을 하면 대략 1주일 정도면 4~5년 정도의 실거래 매매가 데이터를 수집이 가능합니다. 
 추가적으로 중간중간 스크랩된 내용에 대해서 #리포트 #메시지 를 전달하는 방법에 대해서는 이후에 한번 설명을 드릴께요.

import schedule

schedule.every().day.at("19:00").do(scrap)
while True: 
    schedule.run_pending()
    time.sleep(1)
    
    
전체코드!!    https://github.com/restato/real-estate
    
