https://www.kaggle.com/c/bike-sharing-demand/data (크롬으로 접속)

<Description>
자전거 대여 기록 데이터로 count를 예측 (회귀)
You are provided hourly rental data spanning two years. 
For this competition, the training set is comprised of the first 19 days of each month, 
while the test set is the 20th to the end of the month. 
You must predict the total count of bikes rented during each hour covered by the test set, 
using only information available prior to the rental period.

<Data Fields>
datetime - hourly date + timestamp  
season -  1 = spring, 2 = summer, 3 = fall, 4 = winter 
holiday - whether the day is considered a holiday
workingday - whether the day is neither a weekend nor holiday
weather - 1: Clear, Few clouds, Partly cloudy, Partly cloudy 
2: Mist + Cloudy, Mist + Broken clouds, Mist + Few clouds, Mist 
3: Light Snow, Light Rain + Thunderstorm + Scattered clouds, Light Rain + Scattered clouds 
4: Heavy Rain + Ice Pallets + Thunderstorm + Mist, Snow + Fog 
temp - temperature in Celsius
atemp - "feels like" temperature in Celsius
humidity - relative humidity
windspeed - wind speed
casual - number of non-registered user rentals initiated
registered - number of registered user rentals initiated
count - number of total rentals

----------------------------------------------------------------------------------
#1 탐색적 데이터 분석(EDA)
import pandas as pd
import numpy as np
import matplotlib as mpl
import matplotlib.pyplot as plt
import seaborn as sns
from scipy import stats
%matplotlib inline #노트북 안에 그래프를 그리기 위해
plt.style.use('ggplot') #그래프에서 격자로 숫자 범위가 눈에 잘 띄도록 ggplot 스타일을 사용
mpl.rcParams['axes.unicode_minus'] = False #그래프에서 마이너스 폰트 깨지는 문제에 대한 대처

train = pd.read_csv("C:/Users/uos/Desktop/online_study/Kaggle_bike/train.csv", parse_dates=["datetime"]) #datetime 타입으로 불러오기
train.shape #(10886, 12)
train.info()
train.head() #windspeed에 0이 많다. 결측을 0으로 한 것이 아닌가 예상
train.temp.describe() #temp변수 탐색
train.isnull().sum() #null 있는 지
import missingno as msno #프롬프트에서 pip install missingno하여 설치 후 사용
msno.matrix(train, figsize=(12,5)) #null있는지 시각화

train["year"] = train["datetime"].dt.year
train["month"] = train["datetime"].dt.month
train["day"] = train["datetime"].dt.day
train["hour"] = train["datetime"].dt.hour
train["minute"] = train["datetime"].dt.minute
train["second"] = train["datetime"].dt.second #datetime변수 쪼개기
train.shape #(10886, 18)

figure, ((ax1,ax2,ax3), (ax4,ax5,ax6)) = plt.subplots(nrows=2, ncols=3) #import matplotlib.pyplot as plt 했던 거, 그림이 2*3으로 나오도록
figure.set_size_inches(18,8)

sns.barplot(data=train, x="year", y="count", ax=ax1) 
sns.barplot(data=train, x="month", y="count", ax=ax2)
sns.barplot(data=train, x="day", y="count", ax=ax3)
sns.barplot(data=train, x="hour", y="count", ax=ax4)
sns.barplot(data=train, x="minute", y="count", ax=ax5)
sns.barplot(data=train, x="second", y="count", ax=ax6) #위에서 ax1 등으로 별명 지정하여 사용

ax1.set(ylabel='Count',title="by year")
ax2.set(xlabel='month',title="by month")
ax3.set(xlabel='day', title="by day")
ax4.set(xlabel='hour', title="by hour")
