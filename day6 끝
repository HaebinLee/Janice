#43 함수
- 내장함수 (기본 제공)
- 모듈의 함수 (import하여 사용)
- 사용자정의 함수 (직접 만들기)

def 함수이름(인자,...):
     명령1
     명령2
     .
     .
     return 결과
     
- 인자와 return은 없어도됨
 
 
 #44 함수를 사용하는 이유
 - 재사용가능
 - 코드관리용이
 - 재조립하여 사용가능
 
 
 #45 결과 여러개 돌려주기
 - 인자 = 매개변수
 
 - return 결과1, 결과2
 - 그럼 결과가 괄호안에 나옴 : 튜플로 패킹하여 반환한 것
 - re1, re2 = 함수이름(인자) : 언피킹 = 분배 가능
 
 
 #46 모듈 (비슷한 함수를 모아놓은 파일)
 - 이미 만들어져 있는 걸 가져다가 개발에 사용하면 편리
 
 
#47 랜덤 (모듈 중 하나)
- 난수, 무작위 등의 함수 모아놓음
- import random 이면 준비 끝

- random.choice(리스트 등) : 랜덤하게 하나를 뽑음
- random.sample(리스트 등, 숫자) : 랜덤하게 숫자개 뽑음
  print(random.sample(range(1,46),6)) : 리스트로 로또번호 뽑기

- random.randint(8,10) : 두 숫자 안의 정수를 하나 랜덤으로 뽑음


#48 객체(objects) 
- 파이썬은 대부분이 객체
- 현실의 물체 등을 프로그램으로 구현한 것
- 함수와 데이터를 한번에 묶어 놓은 것
ex. 나이, 무기, 레벨 
    때린다 앞으로간다 뒤로간다
- 객체로 생성되고 그 객체가 데이터와 함수를 갖는 것!!


#49 코딩 스타일
- PEP8 코딩 스타일 가이드라인
- Python 공식 홈페이지에 있음
- 번역본도 있음 : Luavis' Dev Story
- 일관성은 좋지만 너무 strict 하게 하다보면 오히려 복잡해질 수도
- 들여쓰기는 띄어쓰기4개
- 한 행에는 최대 79글자까지만 넣도록
- 띄어쓰기는 , : ; 뒤!에만 하나 넣기


#50 구글링 방법
- "Python 오늘 날짜 구하기" 검색
- "Python datetime" 은 뭘까
- Stack overflow 좋음
  답변 코드 보고 코드로 다시 검색!






 
 
 
 
 
