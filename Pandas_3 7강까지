#5 데이터프레임 행, 열 선택 및 필터하기

- row기준, 연속적
df[1:3] 1번부터 3번 전까지 가져온다 => 인덱스는 0부터 이므로 두번째 세번째를 가져오는 것!
df = df[1:3] 라고 해야 df 자체가 바뀌는 것

- row기준, 불연속적
df.loc[ [0,2] ] => 인덱스 0,2니까 첫번째와 세번째를 가져오는 것!

- by column condition
df[df.age > 25]
df.query('age>25')
df[(df.age >25) & (df.name == 'Nate')]

- Col기준, 연속적
df.iloc[:, 0:2] 2열 전까지 가져온다!!! => col 두개 가져오는 것
df.iloc[0:2, 0:2]

- Col기준, col이름으로 필터링
df_filtered = df[['name', 'age']]
df.filter(items=['age', 'job'])

- Col기준, 심화 필터링
df.filter(like='a',axis=1) 컬럼이름에 a가 들어간 것, axis=1이 컬럼
df.filter(regex='b$',axis=1) 컬럼이름이 b로 끝나는 것, axis=1이 컬럼

*file path에 한글이 먹히지 않네요....*


#6 데이터프레임 행, 열 삭제하기
friend_dict_list = [{'age': 20, 'job': 'student'},
         {'age': 30, 'job': 'developer'},
         {'age': 30, 'job': 'teacher'}]
df = pd.DataFrame(friend_dict_list, index = ['John', 'Jenny', 'Nate'])

행이름이 John, Jenny, Nate로 들어감

- drop row
df.drop(['John', 'Nate']) 드랍해서 보여주기만
df.drop(['John', 'Nate'], inplace = True) 바로 df에 적용
df = df.drop(df.index[[0,2]]) row id로 삭제
df = df[df.age != 30] column value로 삭제

- drop column
df.drop('age', axis=1) 컬럼 중에 'age' 드랍하여 보여줌
df.drop('age', axis=1, inplace = True) 드랍해서 바로 df에 적용


#7 행, 열 생성 및 수정하기
- Add New Col with default value
df['salary'] = 0 => 새 열은 다 0으로 채워짐

- by true or false condition
import numpy as np
df['salary'] = np.where(df['job'] != 'student' , 'yes', 'no')

- by adding two existing cols
df['total'] = df['midterm'] + df['final']

- from existing column
df['average'] = df['total'] / 2

- by conditional condition, 리스트 생성후 반복문 사용
grades = []
for row in df['average']:
    if row >= 90:
        grades.append('A')
    elif row >= 80:
        grades.append('B')
    elif row >= 70:
        grades.append('C')
    else:
        grades.append('F')
df['grade'] = grades 새로운 열에 리스트 삽입

- use apply function
def pass_or_fail(row):
    print(row)
    if row != "F":
        return 'Pass'
    else:
        return 'Fail'
df.grade = df.grade.apply(pass_or_fail)


- info "extraction" using df.apply
date_list = [{'yyyy-mm-dd': '2000-06-27'},
         {'yyyy-mm-dd': '2002-09-24'},
         {'yyyy-mm-dd': '2005-12-20'}]
df = pd.DataFrame(date_list, columns = ['yyyy-mm-dd'])

def extract_year(row):
    return row.split('-')[0
    
    
- Add Row
friend_dict_list = [{'name': 'John', 'midterm': 95, 'final': 85},
         {'name': 'Jenny', 'midterm': 85, 'final': 80},
         {'name': 'Nate', 'midterm': 10, 'final': 30}]
df = pd.DataFrame(friend_dict_list, columns = ['name', 'midterm', 'final'])
df2 = pd.DataFrame([['Ben', 50,50]], columns = ['name', 'midterm', 'final'])
df.append(df2, ignore_index=True)
